{"id":"RobotBlankTemplate","robotType":"ROBOT","mainClass":"com.appian.robot.core.template.RobotBlankTemplate","actions":["start","readCsv","writeinExcel","end"],"conditionalActions":[],"fieldLinks":[],"actionDetails":[{"id":"start","implementation":"/**\n     * Initialize the modules\n     */\npublic void start() {\n    server = JidokaFactory.getServer();\n    client = IClient.getInstance(this);\n    server.debug(\"Robot initialized\");\n}"},{"id":"readCsv","implementation":"public <LoadOptions> void readCsv() throws Exception {\n    try {\n        data = new  ArrayList<List<String>>();\n        CSVReader reader = new  CSVReader(new  FileReader(file));\n        server.info(\"file present\");\n        for (String[] str : reader) {\n            list = new  ArrayList<String>();\n            for (String s : str) {\n                list.add(s);\n            }\n            data.add(list);\n        }\n        server.warn(data);\n    } catch (FileNotFoundException e) {\n        e.printStackTrace();\n    }\n}"},{"id":"writeinExcel","implementation":"public void writeinExcel() throws Exception {\n    try {\n        XSSFWorkbook workbook = new  XSSFWorkbook();\n        XSSFSheet sheet = workbook.createSheet(\"Data\");\n        int rownum = 0;\n        int cellnum = 0;\n        for (List<String> ls : data) {\n            Row row = sheet.createRow(rownum++);\n            for (int i = 0; i < 15; i++) {\n                row.createCell(i).setCellValue(ls.get(i));\n            }\n        }\n        FileOutputStream outputStream = new  FileOutputStream(xlsFileLocation);\n        workbook.write(outputStream);\n        workbook.close();\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n}"},{"id":"end","implementation":"/**\n     * End.\n     */\npublic void end() {\n}"}],"conditionalActionDetails":[],"sdkMethods":[]}